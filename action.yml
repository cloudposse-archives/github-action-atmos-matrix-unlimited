name: 'Atmos matrix unlimited'
description: 'Group Atmos account stacks and chunk them by 256 to implement nested matrices workaround'
author: hello@cloudposse.com
branding:
  icon: 'wind'
  color: 'white'
inputs:
  stacks:
    required: true
    description: 'Stacks list'
    default: 'true'
  sort-by:
    required: false
    description: 'Sort by query'
    default: '.stack_slug'
  group-by:
    required: false
    description: 'Group by query'
    default: '.stack_slug | split("-") | [.[0], .[2]] | join("-")'
outputs:
  result:
    description: "Matrix unlimited structure"
    value: "${{ steps.current.outputs.output }}"
runs:
  using: "composite"
  steps:
    - id: current
      uses: cloudposse/github-action-jq@v0
      with:
        compact: true
        input: ${{ inputs.stacks }}
        script: |-
          def name: ${{ inputs.sort-by }};
          def group: ${{ inputs.group-by }};
          def chunk: .key / 256 | floor;
          def group_name: [(.value | group), (chunk | if . == 0 then empty else . end)] | join(" ");
          
          sort_by(name) | 
          group_by(group) |
          map( to_entries | group_by(chunk) | 
              map({
                "name": first | group_name,
                "items": map(.value) | {"include": . } | tostring
              })
          ) | flatten | { "include": . }
