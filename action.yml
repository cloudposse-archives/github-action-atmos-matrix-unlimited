name: 'Atmos matrix unlimited'
description: 'Group Atmos account stacks and chunk them by 256 to implement nested matrices workaround'
author: hello@cloudposse.com
branding:
  icon: 'wind'
  color: 'white'
inputs:
  stacks:
    required: true
    description: 'Stacks list'
    default: 'true'
  sort-by:
    required: false
    description: 'Sort by query'
    default: '.stack_slug'
  group-by:
    required: false
    description: 'Group by query'
    default: '.stack_slug | split("-") | [.[0], .[2]] | join("-")'
outputs:
  result:
    description: "Matrix unlimited structure"
    value: "${{ steps.current.outputs.output }}"
runs:
  using: "composite"
  steps:
    - name: 'Setup jq'
      uses: dcarbone/install-jq-action@v1.0.0
      with:
        version: 1.5
        force: 'true'

    - id: current
      shell: bash
      env:
        QUERY: |-
          sort_by(${{ inputs.sort-by }}) | 
          group_by(${{ inputs.group-by }}) |
          map({
            "name": first | ${{ inputs.group-by }},
            "items": ( sort_by(${{ inputs.sort-by }}) | to_entries | group_by(.key / 256 | floor) | 
              map({
                "name": [first, last] | map(.value | ${{ inputs.sort-by }}) | join(" - "),
                "items": map(.value) | {"include": . } | tostring
              }) | { "include": . } | tostring
            )
          }) | {"include": .}        
          
      run: |-
        QUERY=$(echo "${QUERY}" | tr '\n' ' ')
        echo "${QUERY}"
        RESULT=$(echo "${{ inputs.stacks }}" | jq -c -M '${QUERY}'

        echo "output=${RESULT}" >> $GITHUB_OUTPUT
  
